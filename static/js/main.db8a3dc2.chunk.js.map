{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.css","components/Navigation/SideDrawer/SideDrawer.css","components/Navigation/ToolBar/ToolBar.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Burger/BuildControls/BuildControls.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/UI/BackDrop/BackDrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/CheckOut/ContactDetails/ContactDetails.css","components/Order/Order.css","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/ToolBar/ToolBar.js","components/UI/BackDrop/BackDrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuilControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/order.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/CheckOut/ContactDetails/ContactDetails.js","containers/CheckOut/CheckOut.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","Auxiliary","props","children","logo","className","classes","Logo","src","BurgerLogo","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","toolBar","ToolBar","onClick","sdclicked","Nav","DesktopOnly","backdrop","show","BackDrop","bdclicked","sideDrawer","attatchedClasses","SideDrawer","Close","Open","join","Layout","state","open","this","setState","sideDrawerCloseHandler","bind","sideDrawerToggleHandler","Content","Component","BurgerIngredients","ingredients","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Bacon","Cheese","Salad","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","arr","curr","concat","length","Burger","BuildControl","Label","label","Less","deleted","disabled","More","added","controls","BuildControls","price","ctrl","ingredientAdded","ingredientDeleted","OrderButton","purchasable","purchasingHandler","Modal","nextprops","nextstate","style","transform","button","Button","btnType","clicked","OrderSummary","ingredientSummary","textTransform","purchaseCancelHandler","purchaseContinueHandler","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","axiosResponseRef","interceptors","response","use","res","axiosRequestRef","request","req","eject","errorConfirmedHandler","message","fetchOrderSuccess","orders","fetchOrdersFail","fetchOrderStart","BurgerBuilder","purchasing","cancelPurchaseHandler","continuePurchaseHandler","purchaseInit","history","push","purchasableHandler","sum","ele","ingredientsInit","disabledInfo","ings","orderSummary","addIngredientHandler","deleteIngredientHandler","connect","burgerBuilder","totalPrice","dispatcher","ingredientName","dispatch","get","then","data","catch","CheckoutSummary","width","margin","checkoutContinue","checkoutCancel","input","inputElement","inputClasses","InputElement","invalid","isTouched","Invalid","elementType","elementConfig","value","onFocus","changeHandler","onChange","required","options","option","displayValue","Input","ContactDetails","ordersForm","name","placeholder","validations","valid","email","deliveryMethod","street","postalcode","isValid","validityHandler","rules","trim","orderHandler","event","preventDefault","loading","orderData","element","order","purchaseBurger","updatedOrderForm","target","formArray","id","config","form","onSubmit","formElement","post","orderId","orderSuccess","orderFail","orderActions","withRouter","CheckOut","goBack","summary","Redirect","purchased","textAlign","checkoutContinueHandler","checkoutCancelHandler","path","match","url","component","ingredient","display","border","padding","boxSizing","Order","Orders","fetchOrders","fetchedOrders","reverse","App","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","meat","salad","bacon","cheese","reducer","action","newOrder","console","log","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db8a3dc2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients__BreadBottom__16czh\",\"BreadTop\":\"BurgerIngredients__BreadTop__1F9cD\",\"Seeds1\":\"BurgerIngredients__Seeds1__1KqDN\",\"Seeds2\":\"BurgerIngredients__Seeds2__1j0Rg\",\"Meat\":\"BurgerIngredients__Meat__1kFCF\",\"Cheese\":\"BurgerIngredients__Cheese__3JVcn\",\"Salad\":\"BurgerIngredients__Salad__142r8\",\"Bacon\":\"BurgerIngredients__Bacon__3LSem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolBar\":\"ToolBar__ToolBar__8z9jd\",\"Nav\":\"ToolBar__Nav__B3UsM\",\"Logo\":\"ToolBar__Logo__3-gJ4\",\"DesktopOnly\":\"ToolBar__DesktopOnly__2Ye4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\",\"Label\":\"BuildControls__Label__2WDRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop__wZny4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load6\":\"Spinner__load6__3S2CE\",\"round\":\"Spinner__round__2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactDetails\":\"ContactDetails__ContactDetails__201sv\",\"Input\":\"ContactDetails__Input__221hp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","\r\n\r\nconst Auxiliary = (props)=>props.children\r\n\r\nexport default Auxiliary;","import React from 'react'\r\nimport BurgerLogo from \"../../assets/images/burger-logo.png\"\r\nimport classes from './Logo.css'\r\n\r\nconst logo = (props)=>{\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={BurgerLogo}/>\r\n        </div>\r\n    )\r\n}\r\nexport default logo","import React from 'react'\r\nimport classes from './NavigationItem.css'\r\nimport { NavLink } from 'react-router-dom'\r\nconst navigationItem = (props) => {\r\n    return (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink exact={props.exact} to={props.link} activeClassName={classes.active}>{props.children}</NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default navigationItem","import React from 'react'\r\nimport classes from './NavigationItems.css'\r\nimport NavigationItem from './NavigationItem/NavigationItem'\r\n\r\nconst navigationItems = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem exact link=\"/\" >Burger Builder</NavigationItem>\r\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default navigationItems","import React from 'react'\r\nimport classes from './ToolBar.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\n\r\nconst toolBar = (props) => {\r\n    return (\r\n        <header className={classes.ToolBar}>\r\n            <div onClick={()=>props.sdclicked()}>Menu</div>\r\n            <div className={classes.Logo}>\r\n                <Logo />\r\n            </div>\r\n            <nav className={classes.Nav}>\r\n                <div className={classes.DesktopOnly}>\r\n                    <NavigationItems />\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default toolBar","import React from 'react'\r\nimport classes from './BackDrop.css'\r\n\r\nconst backdrop = (props) =>{\r\n    \r\n    return (\r\n        props.show ? <div className={classes.BackDrop} onClick={()=>props.bdclicked()}></div> : null\r\n    )\r\n}\r\n\r\nexport default backdrop","import React from 'react'\r\nimport classes from './SideDrawer.css'\r\nimport Logo from '../../Logo/Logo'\r\nimport NavigationItems from '../NavigationItems/NavigationItems'\r\nimport BackDrop from '../../UI/BackDrop/BackDrop'\r\nimport Auxiliary from '../../../hoc/Auxiliary'\r\n\r\nconst sideDrawer = (props) => {\r\n    let attatchedClasses= [classes.SideDrawer,classes.Close];\r\n    if(props.show)\r\n    attatchedClasses= [classes.SideDrawer,classes.Open];\r\n    return (\r\n        <Auxiliary>\r\n            <BackDrop show={props.show} bdclicked={props.bdclicked} />\r\n            <div className={attatchedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems />\r\n                </nav>\r\n            </div>\r\n        </Auxiliary>\r\n    )\r\n}\r\n\r\nexport default sideDrawer","import React, { Component } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport classes from './Layout.css'\r\nimport ToolBar from '../Navigation/ToolBar/ToolBar'\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    sideDrawerCloseHandler() {\r\n        this.setState({ open: false })\r\n    }\r\n\r\n    sideDrawerToggleHandler() {\r\n        this.state.open === true ? this.setState({ open : false }) : this.setState({ open : true })\r\n        this.setState({ open: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <SideDrawer show={this.state.open} bdclicked={this.sideDrawerCloseHandler.bind(this)} />\r\n                <ToolBar sdclicked={this.sideDrawerToggleHandler.bind(this)} />\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\nexport default Layout","import React, { Component } from 'react'\r\nimport classes from './BurgerIngredients.css'\r\nimport propTypes from 'prop-types'\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredients = null\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredients = <div className={classes.BreadBottom}></div>\r\n                break\r\n            case ('bread-top'):\r\n                ingredients = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break\r\n            case ('meat'):\r\n                ingredients = <div className={classes.Meat}></div>\r\n                break\r\n            case ('bacon'):\r\n                ingredients = <div className={classes.Bacon}></div>\r\n                break\r\n            case ('cheese'):\r\n                ingredients = <div className={classes.Cheese}></div>\r\n                break\r\n            case ('salad'):\r\n                ingredients = <div className={classes.Salad}></div>\r\n                break\r\n            default:\r\n                ingredients = null\r\n        }\r\n        return ingredients\r\n    }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: propTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredients","import React from 'react'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\nimport classes from './Burger.css'\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) =>\r\n            <BurgerIngredients key={igKey + i} type={igKey} />\r\n        )\r\n    }).reduce((arr, curr) => {\r\n        return arr.concat(curr)\r\n    }, [])\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please Start Adding Ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger","import React from 'react'\r\nimport classes from './BuildControl.css'\r\n\r\nconst BuildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button\r\n                className={classes.Less}\r\n                onClick={props.deleted}\r\n                disabled={props.disabled}>\r\n                Less\r\n            </button>\r\n            <button\r\n                className={classes.More}\r\n                onClick={props.added}>\r\n                More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuildControl","import React from 'react'\r\nimport classes from './BuildControls.css'\r\nimport BuildControl from '../BuildControls/BuildControl/BuilControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n]\r\nconst BuildControls = (props) => {\r\n\r\n    return (\r\n            <div className={classes.BuildControls}>\r\n                <div>\r\n                    <label className={classes.Label}>Price Of Your Burger : </label>\r\n                    {props.price}$\r\n                </div>\r\n                {controls.map(ctrl => (\r\n                    <BuildControl key={ctrl.label}\r\n                        label={ctrl.label}\r\n                        added={()=>props.ingredientAdded(ctrl.type)}\r\n                        deleted={()=>props.ingredientDeleted(ctrl.type)}\r\n                        disabled={props.disabled[ctrl.type]}\r\n                    />\r\n                ))}\r\n                <button\r\n                    className={classes.OrderButton}\r\n                    disabled={!props.purchasable}\r\n                    onClick={() => props.purchasingHandler()}>\r\n                    Order Now\r\n            </button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default BuildControls","import React, { Component } from 'react'\r\nimport classes from './Modal.css'\r\nimport Auxiliary from '../../../hoc/Auxiliary'\r\nimport BackDrop from '../BackDrop/BackDrop'\r\n\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextprops,nextstate)\r\n    {\r\n        return nextprops.show!==this.props.show || nextprops.children !== this.props.children\r\n    }\r\n    render() {\r\n        return (\r\n            <Auxiliary>\r\n                <BackDrop show={this.props.show} bdclicked={this.props.bdclicked} />\r\n                <div\r\n                    className={classes.Modal}\r\n                    style={{ transform: this.props.show ? 'translateY(0)' : 'translateY(-1000vh)' }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Modal","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst button = (props) => {\r\n    return (\r\n        <button\r\n            disabled={props.disabled}\r\n            className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n            onClick={props.clicked}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default button","import React, { Component } from 'react'\r\nimport Button from '../../UI/Button/Button'\r\n\r\n\r\nclass OrderSummary extends Component {\r\n    render(){\r\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\r\n            return <li\r\n                key={igKey}>\r\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>\r\n                : {this.props.ingredients[igKey]}\r\n            </li>\r\n        })\r\n        return(\r\n            <div>\r\n                Your Yummy Burger With Following Ingredients Is Ready\r\n                <ul>\r\n                { ingredientSummary }\r\n                </ul>\r\n                <p>Total Price : {this.props.price}$</p>\r\n                <p>Do You Want To Checkout!!</p>\r\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelHandler}>Cancel</Button>\r\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinueHandler}>Continue</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OrderSummary","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://react-db-9d268.firebaseio.com'\r\n})\r\n\r\nexport default instance","import React from 'react'\r\nimport classes from './Spinner.css'\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>\r\n    Loading\r\n    </div>\r\n)\r\n\r\nexport default spinner","import React, { Component } from 'react'\r\nimport Auxiliary from '../Auxiliary'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        }\r\n        componentWillMount() {\r\n            this.axiosResponseRef = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({ error: error })\r\n            })\r\n\r\n            this.axiosRequestRef = axios.interceptors.request.use(req => {\r\n                this.setState({ error: null })\r\n                return req\r\n            })\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.axiosRequestRef)\r\n            axios.interceptors.response.eject(this.axiosResponseRef)\r\n        }\r\n\r\n        errorConfirmedHandler() {\r\n            this.setState({ error: null })\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Auxiliary>\r\n                    <Modal show={this.state.error} bdclicked={this.errorConfirmedHandler.bind(this)}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Auxiliary>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withErrorHandler","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\n\r\nexport const orderSuccess = (orderId, orderData) => {\r\n    return {\r\n        type: actionTypes.ORDER_SUCCESS,\r\n        orderId: orderId,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const orderFail = (error) => {\r\n    return {\r\n        type: actionTypes.ORDER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const orderStart = () => {\r\n    return {\r\n        type: actionTypes.ORDER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatcher => {\r\n        dispatcher(orderStart())\r\n        axios.post('/orders.json', orderData)\r\n            .then(res => dispatcher(orderSuccess(res.data.name, orderData)))\r\n            .catch(error => dispatcher(orderFail(error)))\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatcher => {\r\n        dispatcher(fetchOrderStart)\r\n        axios.get('/orders.json').then(orders => {\r\n            dispatcher(fetchOrderSuccess(orders.data))\r\n        }).catch(error=>{\r\n            dispatcher(fetchOrdersFail(error))\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchOrderSuccess = (orders)=>{\r\n    return {\r\n        type : actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders : orders\r\n    }\r\n}\r\n\r\nexport const fetchOrdersFail = (error)=>{\r\n    return {\r\n        type : actionTypes.FETCH_ORDERS_FAIL,\r\n        error : error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () =>{\r\n    return {\r\n        type : actionTypes.FETCH_ORDERS_START\r\n    }\r\n}","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS'\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED'\r\nexport const INGREDIENTS_INIT = 'INGREDIENTS_INIT'\r\n\r\nexport const ORDER_SUCCESS = 'ORDER_SUCCESS'\r\nexport const ORDER_FAIL = 'ORDER_FAIL'\r\nexport const ORDER_START = 'ORDER_START'\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\r\n","import React, { Component } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport RoundToTwoDecimal from '../../common/RoundToTwoDecimal'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\nimport axios from '../../axios-orders'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport * as burgerBuilderActionTypes from '../../store/actions/index'\r\nimport { connect } from 'react-redux'\r\n\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        purchasable: false,\r\n        purchasing: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.ingredientsInit()\r\n    }\r\n\r\n    cancelPurchaseHandler = () => {\r\n        this.setState(\r\n            {\r\n                purchasing: false\r\n            })\r\n    }\r\n\r\n    continuePurchaseHandler = () => {\r\n        this.props.purchaseInit()\r\n        this.props.history.push('/checkout')\r\n    }\r\n\r\n    purchasingHandler = () => {\r\n        this.setState(\r\n            {\r\n                purchasing: true\r\n            })\r\n    }\r\n\r\n    purchasableHandler = (ingredients) => {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey]\r\n        }).reduce((sum, ele) => {\r\n            sum = sum + ele\r\n            return sum\r\n        }, 0)\r\n        return sum > 0\r\n    }\r\n\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        }\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        let orderSummary = null\r\n\r\n        let burger = this.props.error ? <p>ingredients cant be fetched</p> : <Spinner />\r\n        if (this.props.ings) {\r\n            burger = (\r\n                <Auxiliary>\r\n                    <Burger\r\n                        ingredients={this.props.ings}\r\n                    />\r\n                    <BuildControls\r\n                        ingredientAdded={this.props.addIngredientHandler}\r\n                        ingredientDeleted={this.props.deleteIngredientHandler}\r\n                        disabled={disabledInfo}\r\n                        purchasable={this.purchasableHandler(this.props.ings)}\r\n                        purchasingHandler={this.purchasingHandler}\r\n                        price={this.props.price}\r\n                    />\r\n                </Auxiliary>\r\n            )\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ings}\r\n                purchaseCancelHandler={this.cancelPurchaseHandler}\r\n                purchaseContinueHandler={this.continuePurchaseHandler}\r\n                price={this.props.price}\r\n            />\r\n        }\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show={this.state.purchasing} bdclicked={this.cancelPurchaseHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = (dispatcher) => {\r\n    return {\r\n        addIngredientHandler: (ingredientName) => dispatcher(burgerBuilderActionTypes.addIngredient(ingredientName)),\r\n        deleteIngredientHandler: (ingredientName) => dispatcher(burgerBuilderActionTypes.removeIngredient(ingredientName)),\r\n        ingredientsInit: () => dispatcher(burgerBuilderActionTypes.ingredientsInit()),\r\n        purchaseInit : () => dispatcher(burgerBuilderActionTypes.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withErrorHandler(BurgerBuilder, axios))","import * as actionTypes from './actionTypes'\r\nimport axios from '../../axios-orders'\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const ingredientsInit = () => {\r\n    return dispatch => {\r\n        axios.get('https://react-db-9d268.firebaseio.com/ingredients.json').then(response => {\r\n            dispatch(setIngredients(response.data))\r\n        }).catch(error => {\r\n            dispatch(fetchIngredientsFailed())\r\n        }\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.css'\r\n\r\nconst CheckoutSummary = (props)=>{\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <div style={{width : '100%', margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType='Success' clicked={props.checkoutContinue}>Continue</Button>\r\n            <Button btnType='Danger' clicked={props.checkoutCancel}>Cancel</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummary","import React from 'react'\r\nimport classes from './Input.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null\r\n    let inputClasses = [classes.InputElement]\r\n\r\n    if(props.invalid && props.isTouched)\r\n    {\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onFocus={props.changeHandler}\r\n                onChange={props.changeHandler}\r\n                required\r\n            />\r\n            break\r\n        case ('textArea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onFocus={props.changeHandler}\r\n                onChange={props.changeHandler}\r\n                required\r\n            />\r\n            break\r\n        case ('select'):\r\n            inputElement = <select\r\n                className={inputClasses.join(' ')}\r\n                onFocus={props.changeHandler}\r\n                onChange={props.changeHandler}\r\n            >\r\n                {props.elementConfig.options.map(option => (<option key={option.value} value={option.value}>{option.displayValue}</option>))}\r\n            </select>\r\n            break\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onFocus={props.changeHandler}\r\n                onChange={props.changeHandler}\r\n                required\r\n            />\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input","import React, { Component } from 'react'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './ContactDetails.css'\r\nimport axios from '../../../axios-orders'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport {connect} from 'react-redux'\r\nimport * as orderActions from '../../../store/actions/index'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nclass ContactDetails extends Component {\r\n    state = {\r\n        ordersForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Your Name',\r\n                    type: 'text'\r\n                },\r\n                validations: {\r\n                    required: true\r\n                },\r\n                value: '',\r\n                valid: false, \r\n                isTouched : false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Your Mail',\r\n                    type: 'text'\r\n                },\r\n                validations: {\r\n                    required: true\r\n                },\r\n                value: '',\r\n                valid: false, \r\n                isTouched : false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: [\r\n                        { value: 'fastest', displayValue: 'Fast Delivery' },\r\n                        { value: 'normal', displayValue: 'Normal Delivery' }\r\n                    ]\r\n                },\r\n                value: 'fastest',\r\n                validations: {\r\n\r\n                },\r\n                valid: true, \r\n                isTouched : true\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Your Street',\r\n                    type: 'text'\r\n                },\r\n                validations: {\r\n                    required: true\r\n                },\r\n                value: '',\r\n                valid: false, \r\n                isTouched : false\r\n            },\r\n            postalcode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    placeholder: 'Your ZipCode',\r\n                    type: 'text'\r\n                },\r\n                validations: {\r\n                    required: true\r\n                },\r\n                value: '',\r\n                valid: false, \r\n                isTouched : false\r\n            }\r\n        },\r\n        isValid : false\r\n    }\r\n\r\n    validityHandler = (value, rules) => {\r\n        let valid = true\r\n        if (!rules) {\r\n            return valid\r\n        }\r\n\r\n        if (rules.required) {\r\n            valid = value.trim('') !== ''\r\n        }\r\n        return valid\r\n    }\r\n   \r\n    orderHandler = (event) => {\r\n        event.preventDefault()\r\n        this.setState({ loading: true })\r\n        const orderData = {}\r\n        for (let element in this.state.ordersForm) {\r\n            orderData[element] = this.state.ordersForm[element].value\r\n        }\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            orderData: orderData\r\n        }\r\n        this.props.purchaseBurger(order)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    changeHandler = (event, inputElement) => {\r\n        let isValid = true, i=0\r\n        const updatedOrderForm = {\r\n            ...this.state.ordersForm\r\n        }\r\n        updatedOrderForm[inputElement].value = event.target.value\r\n        updatedOrderForm[inputElement].valid = this.validityHandler(updatedOrderForm[inputElement].value, updatedOrderForm[inputElement].validations)\r\n        for (let element in this.state.ordersForm) {\r\n            isValid = isValid && this.state.ordersForm[element].valid\r\n        }\r\n        updatedOrderForm[inputElement].isTouched = true\r\n        this.setState({ ordersForm: updatedOrderForm, isValid: isValid })\r\n       \r\n    }\r\n\r\n    render() {\r\n        let formArray = []\r\n        for (let element in this.state.ordersForm) {\r\n            formArray.push({ id: element, config: this.state.ordersForm[element] })\r\n        }\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {\r\n                    formArray.map(formElement => {\r\n                        return (\r\n                            <Input\r\n                                key={formElement.id}\r\n                                elementType={formElement.config.elementType}\r\n                                elementConfig={formElement.config.elementConfig}\r\n                                value={formElement.config.value}\r\n                                changeHandler={(event) => this.changeHandler(event, formElement.id)}\r\n                                invalid = {!this.state.ordersForm[formElement.id].valid}\r\n                                isTouched = {this.state.ordersForm[formElement.id].isTouched}\r\n                            />\r\n                        )\r\n                    })}\r\n\r\n                <Button btnType=\"Success\" disabled={!this.state.isValid} clicked={this.orderHandler}>Order</Button>\r\n            </form>\r\n        )\r\n        if (this.props.loading)\r\n            form = <Spinner />\r\n        return (\r\n            <div className={classes.ContactDetails}>\r\n                <h3>Enter your contact details</h3>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        ingredients : state.burgerBuilder.ingredients,\r\n        price : state.burgerBuilder.totalPrice,\r\n        loading : state.order.loading\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = (dispatcher)=>{\r\n    return{\r\n        purchaseBurger : (orderData)=>dispatcher(orderActions.purchaseBurger(orderData)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(withRouter(withErrorHandler(ContactDetails, axios)))","import React, { Component } from 'react'\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport ContactDetails from './ContactDetails/ContactDetails'\r\nimport { connect } from 'react-redux'\r\n\r\nclass CheckOut extends Component {\r\n\r\n    checkoutContinueHandler() {\r\n        this.props.history.push('/checkout/contactdetails')\r\n    }\r\n\r\n    checkoutCancelHandler() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    render() {\r\n        let summary = Redirect('/')\r\n        if (this.props.ingredients) {\r\n            const purchased = this.props.purchased?Redirect('/'):null\r\n            summary = (\r\n                <div>\r\n                    {purchased}\r\n                    <h2 style={{ textAlign: 'center' }}>Burger Preview</h2>\r\n                    <CheckoutSummary ingredients={this.props.ingredients}\r\n                        checkoutContinue={this.checkoutContinueHandler.bind(this)}\r\n                        checkoutCancel={this.checkoutCancelHandler.bind(this)} />\r\n                    <Route exact path={this.props.match.url + '/contactdetails'} component={ContactDetails} />\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {summary}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        purchased : state.order.purchased\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(CheckOut)\r\n","import React from 'react'\r\nimport classes from './Order.css'\r\n\r\nconst order = (props) => {\r\n    let i = 0\r\n \r\n    let ingredients = Object.keys(props.ingredients).map(ingredient => {\r\n        return (\r\n            <span style={{\r\n                textTransform : 'capitalize',\r\n                display : 'inline-block',\r\n                margin : '0 8px',\r\n                border : '1px solid #ccc',\r\n                padding : '5px',\r\n                boxSizing : 'border-box'\r\n            }} key={i++}>{ingredient} : {props.ingredients[ingredient]} </span>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={classes.Order}>\r\n            <b>Ingredients</b> : {ingredients}\r\n            <br />\r\n            <br />\r\n            <b>Price</b> : {props.price}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order","import React, { Component } from 'react'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders'\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport * as actionTypes from '../../store/actions/index'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentWillMount() {\r\n        this.props.fetchOrders()\r\n    }\r\n\r\n    render() {\r\n        let spinner = null\r\n        if (this.props.loading)\r\n            spinner = <Spinner />\r\n        let fetchedOrders = null\r\n        if (this.props.orders) {\r\n            const orders = this.props.orders\r\n            fetchedOrders = Object.keys(orders).reverse().map(order => {\r\n                return (<Order key={order} ingredients={orders[order].ingredients} price={orders[order].price} />)\r\n            })\r\n        }\r\n        return (\r\n            <div>\r\n                {spinner}\r\n                {fetchedOrders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapActionsToProps = (dispatcher) => {\r\n    return {\r\n        fetchOrders: () => dispatcher(actionTypes.fetchOrders())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapActionsToProps)(withErrorHandler(Orders, axios))","import React from 'react';\r\nimport Layout from './components/Layout/Layout'\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\r\nimport CheckOut from './containers/CheckOut/CheckOut'\r\nimport { Route } from 'react-router-dom'\r\nimport Orders from './containers/Orders/Orders'\r\n\r\nfunction App() {\r\n  return (\r\n    <div >\r\n      <Layout>\r\n        <Route exact path='/'  component={BurgerBuilder} />\r\n        <Route path='/checkout'  component={CheckOut} />\r\n        <Route path='/orders' component={Orders}/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    ingredients:null,\r\n    totalPrice: 4,\r\n    error : false\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    meat: 0.6,\r\n    salad: 0.3,\r\n    bacon: 0.3,\r\n    cheese: 0.5\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice : state.totalPrice+INGREDIENT_PRICES[action.ingredientName],\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice : state.totalPrice-INGREDIENT_PRICES[action.ingredientName],\r\n            }\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients : action.ingredients,\r\n                error : false,\r\n                totalPrice : 4\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error : true\r\n            }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes'\r\n\r\nconst initialState={\r\n    orders : [],\r\n    loading : false,\r\n    purchased : false\r\n}\r\n\r\nconst reducer = (state = initialState, action)=>{\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased : false\r\n            }\r\n        case actionTypes.ORDER_START:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case actionTypes.ORDER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id : action.orderId\r\n            }\r\n            console.log(newOrder)\r\n            return {\r\n                ...state,\r\n                loading : false,\r\n                purchased : true,\r\n                orders : state.orders.concat(newOrder)\r\n            }\r\n        case actionTypes.ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading : false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading : true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders : action.orders,\r\n                loading : false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading : false\r\n            }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { createStore ,combineReducers, applyMiddleware, compose} from 'redux';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order'\r\nimport {Provider} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder : burgerBuilderReducer,\r\n    order : orderReducer\r\n})\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </Provider>\r\n\r\n)\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}