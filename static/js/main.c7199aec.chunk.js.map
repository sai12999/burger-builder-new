{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/Burger/BuildControls/BuildControls.css","components/Navigation/ToolBar/ToolBar.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/BackDrop/BackDrop.css","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/ToolBar/ToolBar.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuilControl.js","components/Burger/BuildControls/BuildControls.js","common/RoundToTwoDecimal.js","components/UI/BackDrop/BackDrop.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","containers/BurgerBuilder/BurgerBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Auxiliary","props","children","logo","className","classes","Logo","src","BurgerLogo","toolBar","ToolBar","Nav","layout","Content","BurgerIngredients","ingredients","this","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Bacon","Cheese","Salad","Component","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","arr","curr","concat","length","Burger","BuildControl","Label","label","Less","onClick","deleted","disabled","More","added","controls","BuildControls","price","ctrl","ingredientAdded","ingredientDeleted","OrderButton","purchasable","purchasingHandler","RoundToTwoDecimal","num","Math","round","backdrop","show","BackDrop","bdclicked","modal","Modal","style","transform","button","Button","btnType","join","clicked","orderSummary","ingredientSummary","textTransform","purchaseCancelHandler","purchaseContinueHandler","INGREDIENT_PRICES","meat","salad","bacon","cheese","BurgerBuilder","state","totalPrice","purchasing","cancelPurchaseHandler","setState","continuePurchaseHandler","alert","purchasableHandler","sum","ele","addIngredientHandler","updatedIngredients","updatedPrice","deleteIngredientHandler","disabledInfo","cancelPurchasehandler","OrderSummary","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7199aec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients__BreadBottom__16czh\",\"BreadTop\":\"BurgerIngredients__BreadTop__1F9cD\",\"Seeds1\":\"BurgerIngredients__Seeds1__1KqDN\",\"Seeds2\":\"BurgerIngredients__Seeds2__1j0Rg\",\"Meat\":\"BurgerIngredients__Meat__1kFCF\",\"Cheese\":\"BurgerIngredients__Cheese__3JVcn\",\"Salad\":\"BurgerIngredients__Salad__142r8\",\"Bacon\":\"BurgerIngredients__Bacon__3LSem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\",\"Label\":\"BuildControls__Label__2WDRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolBar\":\"ToolBar__ToolBar__8z9jd\",\"Nav\":\"ToolBar__Nav__B3UsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop__wZny4\"};","\r\n\r\nconst Auxiliary = (props)=>props.children\r\n\r\nexport default Auxiliary;","import React from 'react'\r\nimport BurgerLogo from \"../../assets/images/burger-logo.png\"\r\nimport classes from './Logo.css'\r\n\r\nconst logo = (props)=>{\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={BurgerLogo}/>\r\n        </div>\r\n    )\r\n}\r\nexport default logo","import React from 'react'\r\nimport classes from './ToolBar.css'\r\nimport Logo from '../../Logo/Logo'\r\n\r\nconst toolBar = (props)=>{\r\n    return (\r\n        <header className={classes.ToolBar}>\r\n            <div>Menu</div>\r\n            <Logo />\r\n            <nav className={classes.Nav}>...</nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default toolBar","import React from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport classes from './Layout.css'\r\nimport ToolBar from '../Navigation/ToolBar/ToolBar'\r\n\r\nconst layout = (props) => (\r\n    <Auxiliary>\r\n        <ToolBar />\r\n        <main className={classes.Content}>\r\n            {props.children}\r\n        </main>\r\n    </Auxiliary>\r\n)\r\n\r\nexport default layout","import React, { Component } from 'react'\r\nimport classes from './BurgerIngredients.css'\r\nimport propTypes from 'prop-types'\r\n\r\nclass BurgerIngredients extends Component {\r\n    render() {\r\n        let ingredients = null\r\n        switch (this.props.type) {\r\n            case ('bread-bottom'):\r\n                ingredients = <div className={classes.BreadBottom}></div>\r\n                break\r\n            case ('bread-top'):\r\n                ingredients = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                )\r\n                break\r\n            case ('meat'):\r\n                ingredients = <div className={classes.Meat}></div>\r\n                break\r\n            case ('bacon'):\r\n                ingredients = <div className={classes.Bacon}></div>\r\n                break\r\n            case ('cheese'):\r\n                ingredients = <div className={classes.Cheese}></div>\r\n                break\r\n            case ('salad'):\r\n                ingredients = <div className={classes.Salad}></div>\r\n                break\r\n            default:\r\n                ingredients = null\r\n        }\r\n        return ingredients\r\n    }\r\n}\r\n\r\nBurgerIngredients.propTypes = {\r\n    type: propTypes.string.isRequired\r\n}\r\n\r\nexport default BurgerIngredients","import React from 'react'\r\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\r\nimport classes from './Burger.css'\r\n\r\nconst burger = (props) => {\r\n\r\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\r\n        return [...Array(props.ingredients[igKey])].map((_, i) =>\r\n            <BurgerIngredients key={igKey + i} type={igKey} />\r\n        )\r\n    }).reduce((arr, curr) => {\r\n        return arr.concat(curr)\r\n    }, [])\r\n\r\n    if (transformedIngredients.length === 0) {\r\n        transformedIngredients = <p>Please Start Adding Ingredients</p>\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredients type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredients type=\"bread-bottom\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default burger","import React from 'react'\r\nimport classes from './BuildControl.css'\r\n\r\nconst BuildControl = (props) => {\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>{props.label}</div>\r\n            <button\r\n                className={classes.Less}\r\n                onClick={() => props.deleted(props.type)}\r\n                disabled={props.disabled}>\r\n                Less\r\n            </button>\r\n            <button\r\n                className={classes.More}\r\n                onClick={() => props.added(props.type)}>\r\n                More\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BuildControl","import React from 'react'\r\nimport classes from './BuildControls.css'\r\nimport BuildControl from '../BuildControls/BuildControl/BuilControl'\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n]\r\nconst BuildControls = (props) => {\r\n\r\n    return (\r\n            <div className={classes.BuildControls}>\r\n                <div>\r\n                    <label className={classes.Label}>Price Of Your Burger : </label>\r\n                    {props.price}$\r\n                </div>\r\n                {controls.map(ctrl => (\r\n                    <BuildControl key={ctrl.label}\r\n                        label={ctrl.label}\r\n                        added={props.ingredientAdded}\r\n                        deleted={props.ingredientDeleted}\r\n                        type={ctrl.type}\r\n                        disabled={props.disabled[ctrl.type]}\r\n                    />\r\n                ))}\r\n                <button\r\n                    className={classes.OrderButton}\r\n                    disabled={!props.purchasable}\r\n                    onClick={() => props.purchasingHandler()}>\r\n                    Order Now\r\n            </button>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default BuildControls","\r\n\r\nconst RoundToTwoDecimal = (num)=>Math.round(num*100)/100\r\n\r\nexport default RoundToTwoDecimal","import React from 'react'\r\nimport classes from './BackDrop.css'\r\n\r\nconst backdrop = (props) =>{\r\n    \r\n    return (\r\n        props.show ? <div className={classes.BackDrop} onClick={()=>props.bdclicked()}></div> : null\r\n    )\r\n}\r\n\r\nexport default backdrop","import React from 'react'\r\nimport classes from './Modal.css'\r\nimport Auxiliary from '../../../hoc/Auxiliary'\r\nimport BackDrop from '../BackDrop/BackDrop'\r\n\r\nconst modal = (props) => (\r\n    <Auxiliary>\r\n        <BackDrop show={props.show} bdclicked={props.bdclicked}/>\r\n        <div\r\n            className={classes.Modal}\r\n            style={{ transform: props.show ? 'translateY(0)' : 'translateY(-100vh)' }}>\r\n            {props.children}\r\n        </div>\r\n    </Auxiliary>\r\n)\r\n\r\nexport default modal","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst button = (props) => {\r\n    return (\r\n        <div\r\n            className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n            onClick={props.clicked}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default button","import React from 'react'\r\nimport Button from '../../UI/Button/Button'\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients).map(igKey => {\r\n        return <li\r\n            key={igKey}>\r\n            <span style={{ textTransform: 'capitalize' }}>{igKey}</span>\r\n            : {props.ingredients[igKey]}\r\n        </li>\r\n    })\r\n    return (\r\n        <div>\r\n            Your Yummy Burger With Following Ingredients Is Ready\r\n            <ul>\r\n                {ingredientSummary}\r\n            </ul>\r\n            <p>Total Price : {props.price}$</p>\r\n            <p>Do You Want To Checkout!!</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCancelHandler}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinueHandler}>Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default orderSummary","import React, { Component } from 'react'\r\nimport Auxiliary from '../../hoc/Auxiliary'\r\nimport Burger from '../../components/Burger/Burger'\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport RoundToTwoDecimal from '../../common/RoundToTwoDecimal'\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\r\n\r\n\r\nconst INGREDIENT_PRICES = {\r\n    meat: 0.6,\r\n    salad: 0.3,\r\n    bacon: 0.3,\r\n    cheese: 0.5\r\n}\r\nclass BurgerBuilder extends Component {\r\n\r\n    state = {\r\n        ingredients: {\r\n            meat: 0,\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false\r\n    }\r\n\r\n    cancelPurchaseHandler = () => {\r\n        this.setState(\r\n            {\r\n                purchasing: false\r\n            })\r\n    }\r\n\r\n    continuePurchaseHandler = () => {\r\n        this.setState(\r\n            {\r\n                purchasing: false\r\n            })\r\n        alert(\"order placed successfully!\")\r\n    }\r\n\r\n    purchasingHandler = () => {\r\n        this.setState(\r\n            {\r\n                purchasing: true\r\n            })\r\n    }\r\n\r\n    purchasableHandler = (ingredients) => {\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey]\r\n        }).reduce((sum, ele) => {\r\n            sum = sum + ele\r\n            return sum\r\n        }, 0)\r\n        this.setState({ purchasable: sum > 0 })\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updatedIngredients[type] + 1\r\n        const updatedPrice = RoundToTwoDecimal(this.state.totalPrice + INGREDIENT_PRICES[type])\r\n        this.setState({ ingredients: updatedIngredients, totalPrice: updatedPrice })\r\n        this.purchasableHandler(updatedIngredients)\r\n    }\r\n\r\n    deleteIngredientHandler = (type) => {\r\n        if (this.state.ingredients[type] !== 0) {\r\n            const updatedIngredients = {\r\n                ...this.state.ingredients\r\n            }\r\n            updatedIngredients[type]--\r\n            const updatedPrice = RoundToTwoDecimal(this.state.totalPrice - INGREDIENT_PRICES[type])\r\n            this.setState({ ingredients: updatedIngredients, totalPrice: updatedPrice })\r\n            this.purchasableHandler(updatedIngredients)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n\r\n        return (\r\n            <Auxiliary>\r\n                <Modal show={this.state.purchasing} bdclicked={this.cancelPurchasehandler}>\r\n                    <OrderSummary\r\n                        ingredients={this.state.ingredients}\r\n                        purchaseCancelHandler={this.cancelPurchaseHandler}\r\n                        purchaseContinueHandler={this.continuePurchaseHandler}\r\n                        price={this.state.totalPrice}\r\n                    />\r\n                </Modal>\r\n                <Burger\r\n                    ingredients={this.state.ingredients}\r\n                />\r\n                <BuildControls\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientDeleted={this.deleteIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    purchasable={this.state.purchasable}\r\n                    purchasingHandler={this.purchasingHandler}\r\n                    price={this.state.totalPrice}\r\n                />\r\n            </Auxiliary>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder","import React from 'react';\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\n\nfunction App() {\n  return (\n    <div >\n      <Layout>\n        <BurgerBuilder />\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}