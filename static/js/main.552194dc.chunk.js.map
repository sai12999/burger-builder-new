{"version":3,"sources":["components/Burger/BurgerIngredients/BurgerIngredients.css","components/Navigation/SideDrawer/SideDrawer.css","components/Navigation/ToolBar/ToolBar.css","components/Burger/BuildControls/BuildControl/BuildControl.css","components/UI/Input/Input.css","components/Burger/BuildControls/BuildControls.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.css","components/UI/Button/Button.css","components/Layout/Layout.css","assets/images/burger-logo.png","components/Logo/Logo.css","components/Navigation/NavigationItems/NavigationItems.css","components/UI/BackDrop/BackDrop.css","components/Burger/Burger.css","components/UI/Modal/Modal.css","components/UI/Spinner/Spinner.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/CheckOut/ContactDetails/ContactDetails.css","components/Order/Order.css","hoc/Auxiliary.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/ToolBar/ToolBar.js","components/UI/BackDrop/BackDrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredients/BurgerIngredients.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuilControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBuilder/BurgerBuilder.js","store/actionTypes.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/CheckOut/ContactDetails/ContactDetails.js","containers/CheckOut/CheckOut.js","components/Order/Order.js","containers/Orders/Orders.js","App.js","serviceWorker.js","store/reducer.js","index.js"],"names":["module","exports","Auxiliary","props","children","logo","className","classes","Logo","src","BurgerLogo","navigationItem","NavigationItem","exact","to","link","activeClassName","active","navigationItems","NavigationItems","toolBar","ToolBar","onClick","sdclicked","Nav","DesktopOnly","backdrop","show","BackDrop","bdclicked","sideDrawer","attatchedClasses","SideDrawer","Close","Open","join","Layout","state","open","this","setState","sideDrawerCloseHandler","bind","sideDrawerToggleHandler","Content","Component","BurgerIngredients","ingredients","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Bacon","Cheese","Salad","burger","transformedIngredients","Object","keys","map","igKey","Array","_","i","key","reduce","arr","curr","concat","length","Burger","BuildControl","Label","label","Less","deleted","disabled","More","added","controls","BuildControls","price","ctrl","ingredientAdded","ingredientDeleted","OrderButton","purchasable","purchasingHandler","Modal","nextprops","nextstate","style","transform","button","Button","btnType","clicked","OrderSummary","ingredientSummary","textTransform","purchaseCancelHandler","purchaseContinueHandler","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","error","axiosResponseRef","interceptors","response","use","res","axiosRequestRef","request","req","eject","errorConfirmedHandler","message","BurgerBuilder","purchasing","loading","cancelPurchaseHandler","continuePurchaseHandler","history","push","purchasableHandler","sum","ele","disabledInfo","ings","orderSummary","addIngredientHandler","deleteIngredientHandler","connect","console","log","totalPrice","dispatcher","ingredientName","CheckoutSummary","width","margin","checkoutContinue","checkoutCancel","input","inputElement","inputClasses","InputElement","invalid","isTouched","Invalid","elementType","elementConfig","value","onFocus","changeHandler","onChange","required","options","option","displayValue","Input","ContactDetails","ordersForm","name","placeholder","validations","valid","email","deliveryMethod","street","postalcode","isValid","validityHandler","rules","trim","orderHandler","event","preventDefault","orderData","element","order","post","then","catch","updatedOrderForm","target","formArray","id","config","form","onSubmit","formElement","withRouter","CheckOut","goBack","match","url","textAlign","checkoutContinueHandler","checkoutCancelHandler","path","component","ingredient","display","border","padding","boxSizing","Order","orders","get","data","fetchedOrders","reverse","App","Orders","Boolean","window","location","hostname","initialState","salad","bacon","cheese","meat","INGREDIENT_PRICES","reducer","action","store","createStore","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.552194dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredients__BreadBottom__16czh\",\"BreadTop\":\"BurgerIngredients__BreadTop__1F9cD\",\"Seeds1\":\"BurgerIngredients__Seeds1__1KqDN\",\"Seeds2\":\"BurgerIngredients__Seeds2__1j0Rg\",\"Meat\":\"BurgerIngredients__Meat__1kFCF\",\"Cheese\":\"BurgerIngredients__Cheese__3JVcn\",\"Salad\":\"BurgerIngredients__Salad__142r8\",\"Bacon\":\"BurgerIngredients__Bacon__3LSem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer__SideDrawer__21TuB\",\"Open\":\"SideDrawer__Open__1pVYR\",\"Close\":\"SideDrawer__Close__3Yv1l\",\"Logo\":\"SideDrawer__Logo__3TkPv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolBar\":\"ToolBar__ToolBar__8z9jd\",\"Nav\":\"ToolBar__Nav__B3UsM\",\"Logo\":\"ToolBar__Logo__3-gJ4\",\"DesktopOnly\":\"ToolBar__DesktopOnly__2Ye4V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl__BuildControl__1jYc3\",\"Label\":\"BuildControl__Label__33Z-p\",\"Less\":\"BuildControl__Less__377MJ\",\"More\":\"BuildControl__More__28-hQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__s67N0\",\"Label\":\"Input__Label___n-1m\",\"InputElement\":\"Input__InputElement__2-aFx\",\"Invalid\":\"Input__Invalid__1sl1p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls__BuildControls__3_01f\",\"OrderButton\":\"BuildControls__OrderButton__myBwT\",\"enable\":\"BuildControls__enable__3jYIq\",\"Label\":\"BuildControls__Label__2WDRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem__NavigationItem__23bcu\",\"active\":\"NavigationItem__active__2zJdO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__QI7b2\",\"Success\":\"Button__Success__2dHUt\",\"Danger\":\"Button__Danger__2xnhN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout__Content__LhJtv\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo__Logo__19WaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems__NavigationItems___yd_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop__wZny4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger__Burger__3K4F-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__32_-a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner__Loader__1DDwY\",\"load6\":\"Spinner__load6__3S2CE\",\"round\":\"Spinner__round__2qdnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__1xBm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactDetails\":\"ContactDetails__ContactDetails__201sv\",\"Input\":\"ContactDetails__Input__221hp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order__Order__4yi4Z\"};","\n\nconst Auxiliary = (props)=>props.children\n\nexport default Auxiliary;","import React from 'react'\nimport BurgerLogo from \"../../assets/images/burger-logo.png\"\nimport classes from './Logo.css'\n\nconst logo = (props)=>{\n    return (\n        <div className={classes.Logo}>\n            <img src={BurgerLogo}/>\n        </div>\n    )\n}\nexport default logo","import React from 'react'\nimport classes from './NavigationItem.css'\nimport { NavLink } from 'react-router-dom'\nconst navigationItem = (props) => {\n    return (\n        <li className={classes.NavigationItem}>\n            <NavLink exact={props.exact} to={props.link} activeClassName={classes.active}>{props.children}</NavLink>\n        </li>\n    )\n}\n\nexport default navigationItem","import React from 'react'\nimport classes from './NavigationItems.css'\nimport NavigationItem from './NavigationItem/NavigationItem'\n\nconst navigationItems = (props) => {\n    return (\n        <ul className={classes.NavigationItems}>\n            <NavigationItem exact link=\"/\" >Burger Builder</NavigationItem>\n            <NavigationItem link=\"/orders\">Orders</NavigationItem>\n        </ul>\n    )\n}\n\nexport default navigationItems","import React from 'react'\nimport classes from './ToolBar.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\n\nconst toolBar = (props) => {\n    return (\n        <header className={classes.ToolBar}>\n            <div onClick={()=>props.sdclicked()}>Menu</div>\n            <div className={classes.Logo}>\n                <Logo />\n            </div>\n            <nav className={classes.Nav}>\n                <div className={classes.DesktopOnly}>\n                    <NavigationItems />\n                </div>\n            </nav>\n        </header>\n    )\n}\n\nexport default toolBar","import React from 'react'\nimport classes from './BackDrop.css'\n\nconst backdrop = (props) =>{\n    \n    return (\n        props.show ? <div className={classes.BackDrop} onClick={()=>props.bdclicked()}></div> : null\n    )\n}\n\nexport default backdrop","import React from 'react'\nimport classes from './SideDrawer.css'\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport BackDrop from '../../UI/BackDrop/BackDrop'\nimport Auxiliary from '../../../hoc/Auxiliary'\n\nconst sideDrawer = (props) => {\n    let attatchedClasses= [classes.SideDrawer,classes.Close];\n    if(props.show)\n    attatchedClasses= [classes.SideDrawer,classes.Open];\n    return (\n        <Auxiliary>\n            <BackDrop show={props.show} bdclicked={props.bdclicked} />\n            <div className={attatchedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Auxiliary>\n    )\n}\n\nexport default sideDrawer","import React, { Component } from 'react'\nimport Auxiliary from '../../hoc/Auxiliary'\nimport classes from './Layout.css'\nimport ToolBar from '../Navigation/ToolBar/ToolBar'\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n    state = {\n        open: false\n    }\n\n    sideDrawerCloseHandler() {\n        this.setState({ open: false })\n    }\n\n    sideDrawerToggleHandler() {\n        this.state.open === true ? this.setState({ open : false }) : this.setState({ open : true })\n        this.setState({ open: true })\n    }\n\n    render() {\n        return (\n            <Auxiliary>\n                <SideDrawer show={this.state.open} bdclicked={this.sideDrawerCloseHandler.bind(this)} />\n                <ToolBar sdclicked={this.sideDrawerToggleHandler.bind(this)} />\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Auxiliary>\n        )\n    }\n}\nexport default Layout","import React, { Component } from 'react'\nimport classes from './BurgerIngredients.css'\nimport propTypes from 'prop-types'\n\nclass BurgerIngredients extends Component {\n    render() {\n        let ingredients = null\n        switch (this.props.type) {\n            case ('bread-bottom'):\n                ingredients = <div className={classes.BreadBottom}></div>\n                break\n            case ('bread-top'):\n                ingredients = (\n                    <div className={classes.BreadTop}>\n                        <div className={classes.Seeds1}></div>\n                        <div className={classes.Seeds2}></div>\n                    </div>\n                )\n                break\n            case ('meat'):\n                ingredients = <div className={classes.Meat}></div>\n                break\n            case ('bacon'):\n                ingredients = <div className={classes.Bacon}></div>\n                break\n            case ('cheese'):\n                ingredients = <div className={classes.Cheese}></div>\n                break\n            case ('salad'):\n                ingredients = <div className={classes.Salad}></div>\n                break\n            default:\n                ingredients = null\n        }\n        return ingredients\n    }\n}\n\nBurgerIngredients.propTypes = {\n    type: propTypes.string.isRequired\n}\n\nexport default BurgerIngredients","import React from 'react'\nimport BurgerIngredients from './BurgerIngredients/BurgerIngredients'\nimport classes from './Burger.css'\n\nconst burger = (props) => {\n\n    let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n        return [...Array(props.ingredients[igKey])].map((_, i) =>\n            <BurgerIngredients key={igKey + i} type={igKey} />\n        )\n    }).reduce((arr, curr) => {\n        return arr.concat(curr)\n    }, [])\n\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please Start Adding Ingredients</p>\n    }\n\n    return (\n        <div className={classes.Burger}>\n            <BurgerIngredients type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredients type=\"bread-bottom\" />\n        </div>\n    )\n}\n\nexport default burger","import React from 'react'\nimport classes from './BuildControl.css'\n\nconst BuildControl = (props) => {\n    return (\n        <div className={classes.BuildControl}>\n            <div className={classes.Label}>{props.label}</div>\n            <button\n                className={classes.Less}\n                onClick={props.deleted}\n                disabled={props.disabled}>\n                Less\n            </button>\n            <button\n                className={classes.More}\n                onClick={props.added}>\n                More\n            </button>\n        </div>\n    )\n}\n\nexport default BuildControl","import React from 'react'\nimport classes from './BuildControls.css'\nimport BuildControl from '../BuildControls/BuildControl/BuilControl'\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n]\nconst BuildControls = (props) => {\n\n    return (\n            <div className={classes.BuildControls}>\n                <div>\n                    <label className={classes.Label}>Price Of Your Burger : </label>\n                    {props.price}$\n                </div>\n                {controls.map(ctrl => (\n                    <BuildControl key={ctrl.label}\n                        label={ctrl.label}\n                        added={()=>props.ingredientAdded(ctrl.type)}\n                        deleted={()=>props.ingredientDeleted(ctrl.type)}\n                        disabled={props.disabled[ctrl.type]}\n                    />\n                ))}\n                <button\n                    className={classes.OrderButton}\n                    disabled={!props.purchasable}\n                    onClick={() => props.purchasingHandler()}>\n                    Order Now\n            </button>\n            </div>\n    )\n}\n\nexport default BuildControls","import React, { Component } from 'react'\nimport classes from './Modal.css'\nimport Auxiliary from '../../../hoc/Auxiliary'\nimport BackDrop from '../BackDrop/BackDrop'\n\n\nclass Modal extends Component {\n    shouldComponentUpdate(nextprops,nextstate)\n    {\n        return nextprops.show!==this.props.show || nextprops.children !== this.props.children\n    }\n    render() {\n        return (\n            <Auxiliary>\n                <BackDrop show={this.props.show} bdclicked={this.props.bdclicked} />\n                <div\n                    className={classes.Modal}\n                    style={{ transform: this.props.show ? 'translateY(0)' : 'translateY(-1000vh)' }}>\n                    {this.props.children}\n                </div>\n            </Auxiliary>\n        )\n    }\n}\n\n\nexport default Modal","import React from 'react'\nimport classes from './Button.css'\n\nconst button = (props) => {\n    return (\n        <button\n            disabled={props.disabled}\n            className={[classes.Button, classes[props.btnType]].join(\" \")}\n            onClick={props.clicked}>\n            {props.children}\n        </button>\n    )\n}\n\nexport default button","import React, { Component } from 'react'\nimport Button from '../../UI/Button/Button'\n\n\nclass OrderSummary extends Component {\n    render(){\n        const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n            return <li\n                key={igKey}>\n                <span style={{ textTransform: 'capitalize' }}>{igKey}</span>\n                : {this.props.ingredients[igKey]}\n            </li>\n        })\n        return(\n            <div>\n                Your Yummy Burger With Following Ingredients Is Ready\n                <ul>\n                { ingredientSummary }\n                </ul>\n                <p>Total Price : {this.props.price}$</p>\n                <p>Do You Want To Checkout!!</p>\n                <Button btnType=\"Danger\" clicked={this.props.purchaseCancelHandler}>Cancel</Button>\n                <Button btnType=\"Success\" clicked={this.props.purchaseContinueHandler}>Continue</Button>\n            </div>\n        )\n    }\n}\n\nexport default OrderSummary","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL : 'https://react-db-9d268.firebaseio.com'\n})\n\nexport default instance","import React from 'react'\nimport classes from './Spinner.css'\n\nconst spinner = () => (\n    <div className={classes.Loader}>\n    Loading\n    </div>\n)\n\nexport default spinner","import React, { Component } from 'react'\nimport Auxiliary from '../Auxiliary'\nimport Modal from '../../components/UI/Modal/Modal'\n\n\nconst withErrorHandler = (WrappedComponent, axios) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n        componentWillMount() {\n            this.axiosResponseRef = axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error })\n            })\n\n            this.axiosRequestRef = axios.interceptors.request.use(req => {\n                this.setState({ error: null })\n                return req\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.axiosRequestRef)\n            axios.interceptors.response.eject(this.axiosResponseRef)\n        }\n\n        errorConfirmedHandler() {\n            this.setState({ error: null })\n        }\n\n        render() {\n            return (\n                <Auxiliary>\n                    <Modal show={this.state.error} bdclicked={this.errorConfirmedHandler.bind(this)}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Auxiliary>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler","import React, { Component } from 'react'\nimport Auxiliary from '../../hoc/Auxiliary'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport RoundToTwoDecimal from '../../common/RoundToTwoDecimal'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport axios from '../../axios-orders'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actionTypes from '../../store/actionTypes'\nimport {connect} from 'react-redux'\n\nclass BurgerBuilder extends Component {\n\n    state = {\n        purchasable: false,\n        purchasing: false,\n        loading: false\n    }\n\n    componentDidMount() {\n        // axios.get('https://react-db-9d268.firebaseio.com/ingredients.json').then(response => {\n        //     this.setState({ ingredients: response.data })\n        //     this.purchasableHandler(this.state.ingredients)\n        // })\n    }\n\n    cancelPurchaseHandler = () => {\n        this.setState(\n            {\n                purchasing: false\n            })\n    }\n\n    continuePurchaseHandler = () => {\n\n        this.props.history.push('/checkout')\n\n    }\n\n    purchasingHandler = () => {\n        this.setState(\n            {\n                purchasing: true\n            })\n    }\n\n    purchasableHandler = (ingredients) => {\n        const sum = Object.keys(ingredients).map(igKey => {\n            return ingredients[igKey]\n        }).reduce((sum, ele) => {\n            sum = sum + ele\n            return sum\n        }, 0)\n        return sum > 0 \n    }\n\n    render() {\n        const disabledInfo = {\n            ...this.props.ings\n        }\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n\n        let orderSummary = null\n\n        if (this.state.loading) {\n            orderSummary = <Spinner />\n        }\n\n        let burger = <Spinner />\n        if (this.props.ings) {\n            burger = (\n                <Auxiliary>\n                    <Burger\n                        ingredients={this.props.ings}\n                    />\n                    <BuildControls\n                        ingredientAdded={this.props.addIngredientHandler}\n                        ingredientDeleted={this.props.deleteIngredientHandler}\n                        disabled={disabledInfo}\n                        purchasable={this.purchasableHandler(this.props.ings)}\n                        purchasingHandler={this.purchasingHandler}\n                        price={this.props.price}\n                    />\n                </Auxiliary>\n            )\n            orderSummary = <OrderSummary\n                ingredients={this.props.ings}\n                purchaseCancelHandler={this.cancelPurchaseHandler}\n                purchaseContinueHandler={this.continuePurchaseHandler}\n                price={this.props.price}\n            />\n        }\n        return (\n            <Auxiliary>\n                <Modal show={this.state.purchasing} bdclicked={this.cancelPurchaseHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Auxiliary>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        ings: state.ingredients,\n        price : state.totalPrice\n    }\n}\n\nconst mapActionsToProps = (dispatcher) => {\n    return {\n        addIngredientHandler: (ingredientName) => dispatcher({ type: actionTypes.ADD_INGREDIENT, ingredientName: ingredientName }),\n        deleteIngredientHandler: (ingredientName) => dispatcher({ type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingredientName })\n    }\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(withErrorHandler(BurgerBuilder, axios))","export const ADD_INGREDIENT = 'ADD_INGREDIENT'\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT'\r\n\r\n","import React from 'react'\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\nimport classes from './CheckoutSummary.css'\n\nconst CheckoutSummary = (props)=>{\n    return (\n        <div className={classes.CheckoutSummary}>\n            <div style={{width : '100%', margin:'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button btnType='Success' clicked={props.checkoutContinue}>Continue</Button>\n            <Button btnType='Danger' clicked={props.checkoutCancel}>Cancel</Button>\n        </div>\n    )\n}\n\nexport default CheckoutSummary","import React from 'react'\nimport classes from './Input.css'\n\nconst input = (props) => {\n    let inputElement = null\n    let inputClasses = [classes.InputElement]\n\n    if(props.invalid && props.isTouched)\n    {\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onFocus={props.changeHandler}\n                onChange={props.changeHandler}\n                required\n            />\n            break\n        case ('textArea'):\n            inputElement = <textarea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onFocus={props.changeHandler}\n                onChange={props.changeHandler}\n                required\n            />\n            break\n        case ('select'):\n            inputElement = <select\n                className={inputClasses.join(' ')}\n                onFocus={props.changeHandler}\n                onChange={props.changeHandler}\n            >\n                {props.elementConfig.options.map(option => (<option key={option.value} value={option.value}>{option.displayValue}</option>))}\n            </select>\n            break\n        default:\n            inputElement = <input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onFocus={props.changeHandler}\n                onChange={props.changeHandler}\n                required\n            />\n    }\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input","import React, { Component } from 'react'\nimport Button from '../../../components/UI/Button/Button'\nimport classes from './ContactDetails.css'\nimport axios from '../../../axios-orders'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport { withRouter } from 'react-router-dom'\nimport Input from '../../../components/UI/Input/Input'\nimport {connect} from 'react-redux'\n\nclass ContactDetails extends Component {\n    state = {\n        ordersForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    placeholder: 'Your Name',\n                    type: 'text'\n                },\n                validations: {\n                    required: true\n                },\n                value: '',\n                valid: false, \n                isTouched : false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    placeholder: 'Your Mail',\n                    type: 'text'\n                },\n                validations: {\n                    required: true\n                },\n                value: '',\n                valid: false, \n                isTouched : false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        { value: 'fastest', displayValue: 'Fast Delivery' },\n                        { value: 'normal', displayValue: 'Normal Delivery' }\n                    ]\n                },\n                value: 'fastest',\n                validations: {\n\n                },\n                valid: true, \n                isTouched : true\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    placeholder: 'Your Street',\n                    type: 'text'\n                },\n                validations: {\n                    required: true\n                },\n                value: '',\n                valid: false, \n                isTouched : false\n            },\n            postalcode: {\n                elementType: 'input',\n                elementConfig: {\n                    placeholder: 'Your ZipCode',\n                    type: 'text'\n                },\n                validations: {\n                    required: true\n                },\n                value: '',\n                valid: false, \n                isTouched : false\n            }\n        },\n        isValid : false,\n        loading: false\n    }\n\n    validityHandler = (value, rules) => {\n        let valid = true\n        if (!rules) {\n            return valid\n        }\n\n        if (rules.required) {\n            valid = value.trim('') !== ''\n        }\n        return valid\n    }\n    componentDidMount()\n    {\n        console.log(\"Assam\")\n    }\n    orderHandler = (event) => {\n        event.preventDefault()\n        this.setState({ loading: true })\n        const orderData = {}\n        for (let element in this.state.ordersForm) {\n            orderData[element] = this.state.ordersForm[element].value\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            orderData: orderData\n        }\n        axios.post('/orders.json', order)\n            .then(res => this.setState({ loading: false }))\n            .catch(error =>\n                this.setState({ loading: false }))\n        this.props.history.push('/')\n    }\n\n    changeHandler = (event, inputElement) => {\n        let isValid = true, i=0\n        const updatedOrderForm = {\n            ...this.state.ordersForm\n        }\n        updatedOrderForm[inputElement].value = event.target.value\n        updatedOrderForm[inputElement].valid = this.validityHandler(updatedOrderForm[inputElement].value, updatedOrderForm[inputElement].validations)\n        for (let element in this.state.ordersForm) {\n            isValid = isValid && this.state.ordersForm[element].valid\n        }\n        updatedOrderForm[inputElement].isTouched = true\n        this.setState({ ordersForm: updatedOrderForm, isValid: isValid })\n       \n    }\n\n    render() {\n        let formArray = []\n        for (let element in this.state.ordersForm) {\n            formArray.push({ id: element, config: this.state.ordersForm[element] })\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {\n                    formArray.map(formElement => {\n                        console.log(\"istouched\"+formElement.id.isTouched)\n                        return (\n                            <Input\n                                key={formElement.id}\n                                elementType={formElement.config.elementType}\n                                elementConfig={formElement.config.elementConfig}\n                                value={formElement.config.value}\n                                changeHandler={(event) => this.changeHandler(event, formElement.id)}\n                                invalid = {!this.state.ordersForm[formElement.id].valid}\n                                isTouched = {this.state.ordersForm[formElement.id].isTouched}\n                            />\n                        )\n                    })}\n\n                <Button btnType=\"Success\" disabled={!this.state.isValid} clicked={this.orderHandler}>Order</Button>\n            </form>\n        )\n        console.log(this.state.ordersForm)\n        if (this.state.loading)\n            form = <Spinner />\n        return (\n            <div className={classes.ContactDetails}>\n                <h3>Enter your contact details</h3>\n                {form}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        ingredients : state.ingredients,\n        price : state.totalPrice\n    }\n}\nexport default connect(mapStateToProps)(withRouter(ContactDetails))","import React, { Component } from 'react'\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport { Route } from 'react-router-dom'\nimport ContactDetails from './ContactDetails/ContactDetails'\nimport {connect} from 'react-redux'\n\nclass CheckOut extends Component {\n\n    checkoutContinueHandler() {\n        this.props.history.push('/checkout/contactdetails')\n    }\n\n    checkoutCancelHandler() {\n        this.props.history.goBack();\n    }\n\n    componentDidMount() {\n        console.log(\"checkout mounted\")\n    }\n\n    render() {\n        console.log(this.props.match.url + '/contactdetails')\n        return (\n            <div>\n                <h2 style={{ textAlign: 'center' }}>Burger Preview</h2>\n                <CheckoutSummary ingredients={this.props.ingredients}\n                    checkoutContinue={this.checkoutContinueHandler.bind(this)}\n                    checkoutCancel={this.checkoutCancelHandler.bind(this)} />\n                <Route exact path={this.props.match.url + '/contactdetails'} component={ContactDetails}/>\n            </div>\n        )\n    }\n\n}\nconst mapStateToProps = (state)=>{\n    return {\n        ingredients : state.ingredients,\n    }\n}\nexport default connect(mapStateToProps)(CheckOut)\n","import React from 'react'\nimport classes from './Order.css'\n\nconst order = (props) => {\n    let i = 0\n    console.log(props.ingredients)\n    let ingredients = Object.keys(props.ingredients).map(ingredient => {\n        return (\n            <span style={{\n                textTransform : 'capitalize',\n                display : 'inline-block',\n                margin : '0 8px',\n                border : '1px solid #ccc',\n                padding : '5px',\n                boxSizing : 'border-box'\n            }} key={i++}>{ingredient} : {props.ingredients[ingredient]} </span>\n        )\n    })\n    console.log(props.ingredients)\n    return (\n        <div className={classes.Order}>\n            <b>Ingredients</b> : {ingredients}\n            <br />\n            <br />\n            <b>Price</b> : {props.price}\n        </div>\n    )\n}\n\nexport default order","import React, { Component } from 'react'\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n    state = {\n        orders: null,\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json').then(orders => {\n            this.setState({ orders: orders.data, loading: false })\n        })\n    }\n\n    render() {\n        let spinner = null\n        if (this.state.loading)\n            spinner = <Spinner />\n        let fetchedOrders = null\n        if (this.state.orders) {\n            const orders = this.state.orders\n            fetchedOrders = Object.keys(orders).reverse().map(order => {\n                return (<Order key={order} ingredients={orders[order].ingredients} price={orders[order].price} />)\n            })\n        }\n        return (\n            <div>\n                {spinner}\n                {fetchedOrders}\n            </div>\n        )\n    }\n}\n\nexport default withErrorHandler(Orders, axios)","import React from 'react';\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport CheckOut from './containers/CheckOut/CheckOut'\nimport { Route } from 'react-router-dom'\nimport Orders from './containers/Orders/Orders'\n\nfunction App() {\n  return (\n    <div >\n      <Layout>\n        <Route exact path='/'  component={BurgerBuilder} />\n        <Route path='/checkout'  component={CheckOut} />\n        <Route path='/orders' component={Orders}/>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actionTypes'\r\n\r\nconst initialState = {\r\n    ingredients: {\r\n        salad :0,\r\n        bacon : 0,\r\n        cheese :0,\r\n        meat :0\r\n    },\r\n    totalPrice: 4,\r\n}\r\n\r\nconst INGREDIENT_PRICES = {\r\n    meat: 0.6,\r\n    salad: 0.3,\r\n    bacon: 0.3,\r\n    cheese: 0.5\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice : state.totalPrice+INGREDIENT_PRICES[action.ingredientName],\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice : state.totalPrice-INGREDIENT_PRICES[action.ingredientName],\r\n            }\r\n        default : return state\r\n    }\r\n}\r\n\r\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore } from 'redux';\nimport reducer from './store/reducer';\nimport {Provider} from 'react-redux'\nconst store = createStore(reducer)\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n\n)\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}